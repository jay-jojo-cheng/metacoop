// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// fit_metacoop_cpp
Rcpp::List fit_metacoop_cpp(Rcpp::List Xmat_list, Rcpp::List Y_list, int nvars, int nlambda, const Rcpp::IntegerVector& NOBS_PER_STUDY_, Rcpp::List weights_list, const Rcpp::NumericVector& LAMBDA_);
RcppExport SEXP _metacoop_fit_metacoop_cpp(SEXP Xmat_listSEXP, SEXP Y_listSEXP, SEXP nvarsSEXP, SEXP nlambdaSEXP, SEXP NOBS_PER_STUDY_SEXP, SEXP weights_listSEXP, SEXP LAMBDA_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type Xmat_list(Xmat_listSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type Y_list(Y_listSEXP);
    Rcpp::traits::input_parameter< int >::type nvars(nvarsSEXP);
    Rcpp::traits::input_parameter< int >::type nlambda(nlambdaSEXP);
    Rcpp::traits::input_parameter< const Rcpp::IntegerVector& >::type NOBS_PER_STUDY_(NOBS_PER_STUDY_SEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type weights_list(weights_listSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type LAMBDA_(LAMBDA_SEXP);
    rcpp_result_gen = Rcpp::wrap(fit_metacoop_cpp(Xmat_list, Y_list, nvars, nlambda, NOBS_PER_STUDY_, weights_list, LAMBDA_));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_metacoop_fit_metacoop_cpp", (DL_FUNC) &_metacoop_fit_metacoop_cpp, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_metacoop(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
